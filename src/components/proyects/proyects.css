.containerProyect{
    padding-top: 3%;
    padding-left: 20%;
    padding-right: 20%;
    transition: 1s all ease;

}

.containerProyect.active{
    transform: translateY(0);
    opacity: 1;
}



.listProyect{
    display: grid;
    grid-template-columns: auto auto ;
    gap:60px;
    
}

.listProyectRef{
    display: grid;
    border-radius: 1rem;
    overflow: hidden;
    cursor: pointer;
    width: 540.90px;
    height: 450px;
    text-decoration: none;
    box-shadow: 0px 7px 15px rgba(0, 0, 0, 1);
    
   
    
}

.listProyectRef:nth-child(1){
 /* Create View Timeline */
 view-timeline-name: --revealing-image;
 view-timeline-axis: block;

 /* Attach animation, linked to the  View Timeline */
 animation: linear reveal1 both;
 animation-timeline: --revealing-image;

 /* Tweak range when effect should run*/
 animation-range: entry 10% cover 20%;
}

.listProyectRef:nth-child(2){
    /* Create View Timeline */
    view-timeline-name: --revealing-image;
    view-timeline-axis: block;
   
    /* Attach animation, linked to the  View Timeline */
    animation: linear reveal2 both;
    animation-timeline: --revealing-image;
   
    /* Tweak range when effect should run*/
    animation-range: entry 10% cover 30%;
}
.listProyectRef:nth-child(3){
    /* Create View Timeline */
    view-timeline-name: --revealing-image;
    view-timeline-axis: block;
   
    /* Attach animation, linked to the  View Timeline */
    animation: linear reveal3 both;
    animation-timeline: --revealing-image;
   
    /* Tweak range when effect should run*/
    animation-range: entry 10% cover 30%;
}

.listProyectRef:hover{
    box-shadow: 0 0px 2px #000000, 0 -3px 15px #F56E00;/*MIRAR SI NOS GUSTA NEON*/

}

.listProyectRef > * {
    grid-area: 1/1;
    transition: .3s;
}

.listProyectRef figcaption {

    color: white;
    padding: .75rem;
    background: var(--c,#0009);
    clip-path: inset(0 var(--_i,100%) 0 0);
    margin: -1px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.listProyectRef:hover figcaption{
    --_i: 0%;
    backdrop-filter: blur(5px);
    
}

.listProyectRef figcaption .title{
    font-size: 30px;
    text-align: center;
    color: #F56E00;
}

.listProyectRef figcaption .title h2{
    margin-bottom: 1px;
}

.listProyectRef figcaption .desc{
    font-size: 20px;
    max-width: 36ch;
    margin: 0% auto;
    height: 200px;
}



.imgProyect{
    width: 100%;
    height: 100%; 
}

.languajeProyect{
    display: flex;
    flex-direction: row;
    justify-content: end;
    align-self: flex-end;
    margin-bottom: 10px;
    margin-right: 10px;
    margin-bottom: 0px;
}

.languajeProyect img{
    width: 50px;
}

@media only screen and (max-width: 480px){

    .containerProyect{
        padding-left: 0%;
        padding-right: 0%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 0;
    }

    .listProyect{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .listProyectRef{
        margin-left: 0;
        width: 300px;
        height: 320px; 
    }

    .containerProyect h1{
        padding-left: 0;
    }

    .imgProyect{
        width: 300px;
        height: 325px; 
    }

    .title{
        font-size: 20px;
    }

    .listProyectRef figcaption {

        color: white;
        padding: .75rem;
        background: var(--c,#0009);
        clip-path: inset(0 var(--_i,100%) 0 0);
        margin: -1px;
        display: flex;
        flex-direction: column;
        justify-content: start;
    }

}



@media only screen and (max-width: 1024px){
    .listProyect{
        grid-template-columns: auto;
    }
    .listProyectRef{
        height: 100%;
    }

    
  
}

@keyframes reveal1 {
	from {
		opacity: 0;
		transform: translateX(-150px);
	}
	to {
		opacity: 1;
		transform: translateX(0px);
	}
}

@keyframes reveal2 {
	from {
		opacity: 0;
		transform: translateY(-150px);
	}
	to {
		opacity: 1;
		transform: translateY(0px);
	}
}

@keyframes reveal3 {
	from {
		opacity: 0;
		transform: translateX(+150px);
	}
	to {
		opacity: 1;
		transform: translateX(0px);
	}
}